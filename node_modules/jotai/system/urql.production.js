System.register(["@urql/core","jotai","wonka"],function(g){"use strict";var A,l,w,d,q;return{setters:[function(m){A=m.createClient},function(m){l=m.atom},function(m){w=m.pipe,d=m.skip,q=m.subscribe}],execute:function(){g({atomWithMutation:S,atomWithQuery:Q,atomWithSubscription:L});const m=(()=>{try{return process.env.JOTAI_URQL_DEFAULT_URL}catch{return}})()||"/graphql",v=g("clientAtom",l(A({url:m})));var W=Object.defineProperty,O=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable,x=(o,s,r)=>s in o?W(o,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[s]=r,f=(o,s)=>{for(var r in s||(s={}))j.call(s,r)&&x(o,r,s[r]);if(O)for(var r of O(s))M.call(s,r)&&x(o,r,s[r]);return o};const k=o=>"data"in o&&!o.error;function Q(o,s=r=>r(v)){const r=l(n=>{const t=o(n);if(t.pause)return null;const u=s(n);let c=null;const i=l(new Promise(e=>{c=e}));let b=()=>{throw new Error("setting result without mount")};const a=e=>{if(e instanceof Promise){b(e);return}if(!k(e))throw new Error("result does not have data");c?(c(e),c=null):b(e)};u.query(t.query,t.variables,f(f({},t.requestPolicy&&{requestPolicy:t.requestPolicy}),t.context)).toPromise().then(a).catch(()=>{}),i.onMount=e=>{b=e};const p=l(null),y=l(e=>e(i),(e,h,P)=>{const R=w(u.query(t.query,t.variables,f(f({},t.requestPolicy&&{requestPolicy:t.requestPolicy}),t.context)),d(1),q(a));h(p,R),P(()=>{var E;return(E=e(p))==null?void 0:E.unsubscribe()})});return y.onMount=e=>{let h;return e(P=>{h=P}),h},{args:t,client:u,resultAtom:y,subscriptionAtom:p,listener:a}});return l(n=>{const t=n(r);if(!t)return null;const{resultAtom:u}=t;return n(u)},(n,t,u)=>{switch(u.type){case"reexecute":{const c=n(r);if(!c)throw new Error("query is paused");const{args:i,client:b,subscriptionAtom:a,listener:p}=c;p(new Promise(()=>{}));const y=w(b.query(i.query,i.variables,f(f(f({},i.requestPolicy&&{requestPolicy:i.requestPolicy}),i.context),u.opts)),q(p)),e=n(a);e==null||e.unsubscribe(),t(a,y)}}})}function S(o,s=r=>r(v)){const r=l(new Promise(()=>{}));return l(n=>n(r),(n,t,u)=>{t(r,new Promise(()=>{}));const c=s(n),i=o(n);c.mutation(i,u.variables,u.context).toPromise().then(b=>{var a;t(r,b),(a=u.callback)==null||a.call(u,b)}).catch(()=>{})})}const T=o=>"data"in o;function L(o,s=r=>r(v)){const r=l(n=>{const t=o(n);if(t.pause)return{args:t};const u=s(n);let c=null;const i=l(new Promise(e=>{c=e}));let b=()=>{throw new Error("setting result without mount")};const a=e=>{if(!T(e))throw new Error("result does not have data");c?(c(e),c=null):b(e)},p=w(u.subscription(t.query,t.variables,t.context),q(a));let y=setTimeout(()=>{y=null,p.unsubscribe()},1e3);return i.onMount=e=>{b=e;let h;return y?(clearTimeout(y),h=p):h=w(u.subscription(t.query,t.variables,t.context),q(a)),()=>h.unsubscribe()},{resultAtom:i,args:t}});return l(n=>{const{resultAtom:t}=n(r);return t?n(t):null})}}}});
