{"ast":null,"code":"import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n  constructor() {\n    let snipped = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'void';\n    super(nodeType);\n    this.snipped = snipped;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n\n}\n\nexport default ExpressionNode;","map":{"version":3,"names":["TempNode","ExpressionNode","constructor","snipped","nodeType","generate","builder","type","getNodeType","addFlowCode"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/nodes/core/ExpressionNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n  constructor(snipped = '', nodeType = 'void') {\n    super(nodeType);\n    this.snipped = snipped;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n\n}\n\nexport default ExpressionNode;\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;;AAEA,MAAMC,cAAN,SAA6BD,QAA7B,CAAsC;EACpCE,WAAW,GAAkC;IAAA,IAAjCC,OAAiC,uEAAvB,EAAuB;IAAA,IAAnBC,QAAmB,uEAAR,MAAQ;IAC3C,MAAMA,QAAN;IACA,KAAKD,OAAL,GAAeA,OAAf;EACD;;EAEDE,QAAQ,CAACC,OAAD,EAAU;IAChB,MAAMC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,OAAjB,CAAb;IACA,MAAMH,OAAO,GAAG,KAAKA,OAArB;;IAEA,IAAII,IAAI,KAAK,MAAb,EAAqB;MACnBD,OAAO,CAACG,WAAR,CAAoBN,OAApB;IACD,CAFD,MAEO;MACL,OAAQ,KAAIA,OAAQ,IAApB;IACD;EACF;;AAfmC;;AAmBtC,eAAeF,cAAf"},"metadata":{},"sourceType":"module"}