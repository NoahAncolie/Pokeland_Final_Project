{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\n\nfunction Cloud(_ref) {\n  let {\n    opacity = 0.5,\n    speed = 0.4,\n    width = 10,\n    depth = 1.5,\n    segments = 20,\n    texture = CLOUD_URL,\n    color = '#ffffff',\n    depthTest = true,\n    ...props\n  } = _ref;\n  const gl = useThree(state => state.gl);\n  const group = React.useRef();\n  const cloudTexture = useTexture(texture);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map((_ref2, index) => {\n    let {\n      x,\n      y,\n      scale,\n      density\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Billboard, {\n      key: index,\n      position: [x, y, -index * depth]\n    }, /*#__PURE__*/React.createElement(Plane, {\n      scale: scale,\n      rotation: [0, 0, 0]\n    }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n      map: cloudTexture,\n      \"map-encoding\": gl.outputEncoding,\n      transparent: true,\n      opacity: scale / 6 * density * opacity,\n      depthTest: depthTest,\n      color: color\n    })));\n  })));\n}\n\nexport { Cloud };","map":{"version":3,"names":["React","useThree","useFrame","Billboard","Plane","useTexture","CLOUD_URL","Cloud","opacity","speed","width","depth","segments","texture","color","depthTest","props","gl","state","group","useRef","cloudTexture","clouds","useMemo","Array","map","_","index","x","Math","random","y","scale","sin","PI","density","max","rotation","_group$current","current","children","forEach","cloud","z","setScalar","clock","getElapsedTime","createElement","position","ref","key","outputEncoding","transparent"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nfunction Cloud({\n  opacity = 0.5,\n  speed = 0.4,\n  width = 10,\n  depth = 1.5,\n  segments = 20,\n  texture = CLOUD_URL,\n  color = '#ffffff',\n  depthTest = true,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const group = React.useRef();\n  const cloudTexture = useTexture(texture);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\n    key: index,\n    position: [x, y, -index * depth]\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: scale,\n    rotation: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: cloudTexture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: depthTest,\n    color: color\n  }))))));\n}\n\nexport { Cloud };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}