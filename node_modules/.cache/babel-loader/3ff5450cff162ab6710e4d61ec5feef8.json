{"ast":null,"code":"import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nclass TTFLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.reversed = false;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(arraybuffer) {\n    function convert(font, reversed) {\n      const round = Math.round;\n      const glyphs = {};\n      const scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      const glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      const unicodes = Object.keys(glyphIndexMap);\n\n      for (let i = 0; i < unicodes.length; i++) {\n        const unicode = unicodes[i];\n        const glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          const token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      const paths = [];\n      let path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      const reversed = [];\n      paths.forEach(function (p) {\n        const result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (let i = p.length - 1; i > 0; i--) {\n          const command = p[i];\n          const result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n\n}\n\nexport { TTFLoader };","map":{"version":3,"names":["Loader","FileLoader","parse","TTFLoader","constructor","manager","reversed","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","e","console","error","itemError","arraybuffer","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","Object","keys","i","length","unicode","glyph","undefined","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","forEach","command","type","toLowerCase","x","y","x1","y1","x2","y2","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","paths","c","push","p","result"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/loaders/TTFLoader.js"],"sourcesContent":["import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nclass TTFLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.reversed = false;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(arraybuffer) {\n    function convert(font, reversed) {\n      const round = Math.round;\n      const glyphs = {};\n      const scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      const glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      const unicodes = Object.keys(glyphIndexMap);\n\n      for (let i = 0; i < unicodes.length; i++) {\n        const unicode = unicodes[i];\n        const glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          const token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      const paths = [];\n      let path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      const reversed = [];\n      paths.forEach(function (p) {\n        const result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (let i = p.length - 1; i > 0; i--) {\n          const command = p[i];\n          const result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n\n}\n\nexport { TTFLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}