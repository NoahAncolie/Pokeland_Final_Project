{"ast":null,"code":"import CodeNode from './CodeNode.js';\nimport FunctionCallNode from './FunctionCallNode.js';\n\nclass FunctionNode extends CodeNode {\n  constructor() {\n    let code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    super(code);\n    this.keywords = {};\n  }\n\n  getNodeType(builder) {\n    return this.getNodeFunction(builder).type;\n  }\n\n  getInputs(builder) {\n    return this.getNodeFunction(builder).inputs;\n  }\n\n  getNodeFunction(builder) {\n    const nodeData = builder.getDataFromNode(this);\n    let nodeFunction = nodeData.nodeFunction;\n\n    if (nodeFunction === undefined) {\n      nodeFunction = builder.parser.parseFunction(this.code);\n      nodeData.nodeFunction = nodeFunction;\n    }\n\n    return nodeFunction;\n  }\n\n  call() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new FunctionCallNode(this, parameters);\n  }\n\n  generate(builder, output) {\n    super.generate(builder);\n    const nodeFunction = this.getNodeFunction(builder);\n    const name = nodeFunction.name;\n    const type = nodeFunction.type;\n    const nodeCode = builder.getCodeFromNode(this, type);\n\n    if (name !== '') {\n      // use a custom property name\n      nodeCode.name = name;\n    }\n\n    const propertyName = builder.getPropertyName(nodeCode);\n    let code = this.getNodeFunction(builder).getCode(propertyName);\n    const keywords = this.keywords;\n    const keywordsProperties = Object.keys(keywords);\n\n    if (keywordsProperties.length > 0) {\n      for (const property of keywordsProperties) {\n        const propertyRegExp = new RegExp(`\\\\b${property}\\\\b`, 'g');\n        const nodeProperty = keywords[property].build(builder, 'property');\n        code = code.replace(propertyRegExp, nodeProperty);\n      }\n    }\n\n    nodeCode.code = code;\n\n    if (output === 'property') {\n      return propertyName;\n    } else {\n      return builder.format(`${propertyName}()`, type, output);\n    }\n  }\n\n}\n\nexport default FunctionNode;","map":{"version":3,"names":["CodeNode","FunctionCallNode","FunctionNode","constructor","code","keywords","getNodeType","builder","getNodeFunction","type","getInputs","inputs","nodeData","getDataFromNode","nodeFunction","undefined","parser","parseFunction","call","parameters","generate","output","name","nodeCode","getCodeFromNode","propertyName","getPropertyName","getCode","keywordsProperties","Object","keys","length","property","propertyRegExp","RegExp","nodeProperty","build","replace","format"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/core/FunctionNode.js"],"sourcesContent":["import CodeNode from './CodeNode.js';\nimport FunctionCallNode from './FunctionCallNode.js';\n\nclass FunctionNode extends CodeNode {\n  constructor(code = '') {\n    super(code);\n    this.keywords = {};\n  }\n\n  getNodeType(builder) {\n    return this.getNodeFunction(builder).type;\n  }\n\n  getInputs(builder) {\n    return this.getNodeFunction(builder).inputs;\n  }\n\n  getNodeFunction(builder) {\n    const nodeData = builder.getDataFromNode(this);\n    let nodeFunction = nodeData.nodeFunction;\n\n    if (nodeFunction === undefined) {\n      nodeFunction = builder.parser.parseFunction(this.code);\n      nodeData.nodeFunction = nodeFunction;\n    }\n\n    return nodeFunction;\n  }\n\n  call(parameters = {}) {\n    return new FunctionCallNode(this, parameters);\n  }\n\n  generate(builder, output) {\n    super.generate(builder);\n    const nodeFunction = this.getNodeFunction(builder);\n    const name = nodeFunction.name;\n    const type = nodeFunction.type;\n    const nodeCode = builder.getCodeFromNode(this, type);\n\n    if (name !== '') {\n      // use a custom property name\n      nodeCode.name = name;\n    }\n\n    const propertyName = builder.getPropertyName(nodeCode);\n    let code = this.getNodeFunction(builder).getCode(propertyName);\n    const keywords = this.keywords;\n    const keywordsProperties = Object.keys(keywords);\n\n    if (keywordsProperties.length > 0) {\n      for (const property of keywordsProperties) {\n        const propertyRegExp = new RegExp(`\\\\b${property}\\\\b`, 'g');\n        const nodeProperty = keywords[property].build(builder, 'property');\n        code = code.replace(propertyRegExp, nodeProperty);\n      }\n    }\n\n    nodeCode.code = code;\n\n    if (output === 'property') {\n      return propertyName;\n    } else {\n      return builder.format(`${propertyName}()`, type, output);\n    }\n  }\n\n}\n\nexport default FunctionNode;\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;AAEA,MAAMC,YAAN,SAA2BF,QAA3B,CAAoC;EAClCG,WAAW,GAAY;IAAA,IAAXC,IAAW,uEAAJ,EAAI;IACrB,MAAMA,IAAN;IACA,KAAKC,QAAL,GAAgB,EAAhB;EACD;;EAEDC,WAAW,CAACC,OAAD,EAAU;IACnB,OAAO,KAAKC,eAAL,CAAqBD,OAArB,EAA8BE,IAArC;EACD;;EAEDC,SAAS,CAACH,OAAD,EAAU;IACjB,OAAO,KAAKC,eAAL,CAAqBD,OAArB,EAA8BI,MAArC;EACD;;EAEDH,eAAe,CAACD,OAAD,EAAU;IACvB,MAAMK,QAAQ,GAAGL,OAAO,CAACM,eAAR,CAAwB,IAAxB,CAAjB;IACA,IAAIC,YAAY,GAAGF,QAAQ,CAACE,YAA5B;;IAEA,IAAIA,YAAY,KAAKC,SAArB,EAAgC;MAC9BD,YAAY,GAAGP,OAAO,CAACS,MAAR,CAAeC,aAAf,CAA6B,KAAKb,IAAlC,CAAf;MACAQ,QAAQ,CAACE,YAAT,GAAwBA,YAAxB;IACD;;IAED,OAAOA,YAAP;EACD;;EAEDI,IAAI,GAAkB;IAAA,IAAjBC,UAAiB,uEAAJ,EAAI;IACpB,OAAO,IAAIlB,gBAAJ,CAAqB,IAArB,EAA2BkB,UAA3B,CAAP;EACD;;EAEDC,QAAQ,CAACb,OAAD,EAAUc,MAAV,EAAkB;IACxB,MAAMD,QAAN,CAAeb,OAAf;IACA,MAAMO,YAAY,GAAG,KAAKN,eAAL,CAAqBD,OAArB,CAArB;IACA,MAAMe,IAAI,GAAGR,YAAY,CAACQ,IAA1B;IACA,MAAMb,IAAI,GAAGK,YAAY,CAACL,IAA1B;IACA,MAAMc,QAAQ,GAAGhB,OAAO,CAACiB,eAAR,CAAwB,IAAxB,EAA8Bf,IAA9B,CAAjB;;IAEA,IAAIa,IAAI,KAAK,EAAb,EAAiB;MACf;MACAC,QAAQ,CAACD,IAAT,GAAgBA,IAAhB;IACD;;IAED,MAAMG,YAAY,GAAGlB,OAAO,CAACmB,eAAR,CAAwBH,QAAxB,CAArB;IACA,IAAInB,IAAI,GAAG,KAAKI,eAAL,CAAqBD,OAArB,EAA8BoB,OAA9B,CAAsCF,YAAtC,CAAX;IACA,MAAMpB,QAAQ,GAAG,KAAKA,QAAtB;IACA,MAAMuB,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYzB,QAAZ,CAA3B;;IAEA,IAAIuB,kBAAkB,CAACG,MAAnB,GAA4B,CAAhC,EAAmC;MACjC,KAAK,MAAMC,QAAX,IAAuBJ,kBAAvB,EAA2C;QACzC,MAAMK,cAAc,GAAG,IAAIC,MAAJ,CAAY,MAAKF,QAAS,KAA1B,EAAgC,GAAhC,CAAvB;QACA,MAAMG,YAAY,GAAG9B,QAAQ,CAAC2B,QAAD,CAAR,CAAmBI,KAAnB,CAAyB7B,OAAzB,EAAkC,UAAlC,CAArB;QACAH,IAAI,GAAGA,IAAI,CAACiC,OAAL,CAAaJ,cAAb,EAA6BE,YAA7B,CAAP;MACD;IACF;;IAEDZ,QAAQ,CAACnB,IAAT,GAAgBA,IAAhB;;IAEA,IAAIiB,MAAM,KAAK,UAAf,EAA2B;MACzB,OAAOI,YAAP;IACD,CAFD,MAEO;MACL,OAAOlB,OAAO,CAAC+B,MAAR,CAAgB,GAAEb,YAAa,IAA/B,EAAoChB,IAApC,EAA0CY,MAA1C,CAAP;IACD;EACF;;AA9DiC;;AAkEpC,eAAenB,YAAf"},"metadata":{},"sourceType":"module"}