{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nfunction Bounds(_ref) {\n  let {\n    children,\n    damping = 6,\n    fit,\n    clip,\n    observe,\n    margin = 1.2,\n    eps = 0.01,\n    onFit\n  } = _ref;\n  const ref = React.useRef(null);\n  const {\n    camera,\n    invalidate,\n    size,\n    controls: controlsImpl\n  } = useThree();\n  const controls = controlsImpl;\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          const {\n            distance\n          } = getSize();\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          const newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        invalidate();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        invalidate();\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]); // Scale pointer on window resize\n\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };","map":{"version":3,"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","isBox3","context","createContext","Bounds","children","damping","fit","clip","observe","margin","eps","onFit","ref","useRef","camera","invalidate","size","controls","controlsImpl","onFitRef","current","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","useState","animating","focus","Vector3","zoom","goal","box","Box3","api","useMemo","getSize","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","copy","target","updateWorldMatrix","setFromObject","isEmpty","position","length","setFromCenterAndSize","constructor","name","direction","clone","sub","normalize","multiplyScalar","newPos","add","maxDistance","near","far","updateProjectionMatrix","update","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","addEventListener","removeEventListener","count","state","createElement","Provider","value","useBounds","useContext"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/@react-three/drei/core/Bounds.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  observe,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const {\n    camera,\n    invalidate,\n    size,\n    controls: controlsImpl\n  } = useThree();\n  const controls = controlsImpl;\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should moves\n          const {\n            distance\n          } = getSize();\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          const newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        invalidate();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        invalidate();\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]); // Scale pointer on window resize\n\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}