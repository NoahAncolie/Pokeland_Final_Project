{"ast":null,"code":"class NodeKeywords {\n  constructor() {\n    this.keywords = [];\n    this.nodes = [];\n    this.keywordsCallback = {};\n  }\n\n  getNode(name) {\n    let node = this.nodes[name];\n\n    if (node === undefined && this.keywordsCallback[name] !== undefined) {\n      node = this.keywordsCallback[name](name);\n      this.nodes[name] = node;\n    }\n\n    return node;\n  }\n\n  addKeyword(name, callback) {\n    this.keywords.push(name);\n    this.keywordsCallback[name] = callback;\n    return this;\n  }\n\n  parse(code) {\n    const keywordNames = this.keywords;\n    const regExp = new RegExp(`\\\\b${keywordNames.join('\\\\b|\\\\b')}\\\\b`, 'g');\n    const codeKeywords = code.match(regExp);\n    const keywordNodes = [];\n\n    if (codeKeywords !== null) {\n      for (const keyword of codeKeywords) {\n        const node = this.getNode(keyword);\n\n        if (node !== undefined && keywordNodes.indexOf(node) === -1) {\n          keywordNodes.push(node);\n        }\n      }\n    }\n\n    return keywordNodes;\n  }\n\n  include(builder, code) {\n    const keywordNodes = this.parse(code);\n\n    for (const keywordNode of keywordNodes) {\n      keywordNode.build(builder);\n    }\n  }\n\n}\n\nexport default NodeKeywords;","map":{"version":3,"names":["NodeKeywords","constructor","keywords","nodes","keywordsCallback","getNode","name","node","undefined","addKeyword","callback","push","parse","code","keywordNames","regExp","RegExp","join","codeKeywords","match","keywordNodes","keyword","indexOf","include","builder","keywordNode","build"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/core/NodeKeywords.js"],"sourcesContent":["class NodeKeywords {\n  constructor() {\n    this.keywords = [];\n    this.nodes = [];\n    this.keywordsCallback = {};\n  }\n\n  getNode(name) {\n    let node = this.nodes[name];\n\n    if (node === undefined && this.keywordsCallback[name] !== undefined) {\n      node = this.keywordsCallback[name](name);\n      this.nodes[name] = node;\n    }\n\n    return node;\n  }\n\n  addKeyword(name, callback) {\n    this.keywords.push(name);\n    this.keywordsCallback[name] = callback;\n    return this;\n  }\n\n  parse(code) {\n    const keywordNames = this.keywords;\n    const regExp = new RegExp(`\\\\b${keywordNames.join('\\\\b|\\\\b')}\\\\b`, 'g');\n    const codeKeywords = code.match(regExp);\n    const keywordNodes = [];\n\n    if (codeKeywords !== null) {\n      for (const keyword of codeKeywords) {\n        const node = this.getNode(keyword);\n\n        if (node !== undefined && keywordNodes.indexOf(node) === -1) {\n          keywordNodes.push(node);\n        }\n      }\n    }\n\n    return keywordNodes;\n  }\n\n  include(builder, code) {\n    const keywordNodes = this.parse(code);\n\n    for (const keywordNode of keywordNodes) {\n      keywordNode.build(builder);\n    }\n  }\n\n}\n\nexport default NodeKeywords;\n"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;EACjBC,WAAW,GAAG;IACZ,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,gBAAL,GAAwB,EAAxB;EACD;;EAEDC,OAAO,CAACC,IAAD,EAAO;IACZ,IAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWG,IAAX,CAAX;;IAEA,IAAIC,IAAI,KAAKC,SAAT,IAAsB,KAAKJ,gBAAL,CAAsBE,IAAtB,MAAgCE,SAA1D,EAAqE;MACnED,IAAI,GAAG,KAAKH,gBAAL,CAAsBE,IAAtB,EAA4BA,IAA5B,CAAP;MACA,KAAKH,KAAL,CAAWG,IAAX,IAAmBC,IAAnB;IACD;;IAED,OAAOA,IAAP;EACD;;EAEDE,UAAU,CAACH,IAAD,EAAOI,QAAP,EAAiB;IACzB,KAAKR,QAAL,CAAcS,IAAd,CAAmBL,IAAnB;IACA,KAAKF,gBAAL,CAAsBE,IAAtB,IAA8BI,QAA9B;IACA,OAAO,IAAP;EACD;;EAEDE,KAAK,CAACC,IAAD,EAAO;IACV,MAAMC,YAAY,GAAG,KAAKZ,QAA1B;IACA,MAAMa,MAAM,GAAG,IAAIC,MAAJ,CAAY,MAAKF,YAAY,CAACG,IAAb,CAAkB,SAAlB,CAA6B,KAA9C,EAAoD,GAApD,CAAf;IACA,MAAMC,YAAY,GAAGL,IAAI,CAACM,KAAL,CAAWJ,MAAX,CAArB;IACA,MAAMK,YAAY,GAAG,EAArB;;IAEA,IAAIF,YAAY,KAAK,IAArB,EAA2B;MACzB,KAAK,MAAMG,OAAX,IAAsBH,YAAtB,EAAoC;QAClC,MAAMX,IAAI,GAAG,KAAKF,OAAL,CAAagB,OAAb,CAAb;;QAEA,IAAId,IAAI,KAAKC,SAAT,IAAsBY,YAAY,CAACE,OAAb,CAAqBf,IAArB,MAA+B,CAAC,CAA1D,EAA6D;UAC3Da,YAAY,CAACT,IAAb,CAAkBJ,IAAlB;QACD;MACF;IACF;;IAED,OAAOa,YAAP;EACD;;EAEDG,OAAO,CAACC,OAAD,EAAUX,IAAV,EAAgB;IACrB,MAAMO,YAAY,GAAG,KAAKR,KAAL,CAAWC,IAAX,CAArB;;IAEA,KAAK,MAAMY,WAAX,IAA0BL,YAA1B,EAAwC;MACtCK,WAAW,CAACC,KAAZ,CAAkBF,OAAlB;IACD;EACF;;AAjDgB;;AAqDnB,eAAexB,YAAf"},"metadata":{},"sourceType":"module"}