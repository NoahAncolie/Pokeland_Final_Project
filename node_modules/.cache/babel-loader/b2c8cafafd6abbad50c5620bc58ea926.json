{"ast":null,"code":"import Node from './Node.js';\nimport { NodeShaderStage } from './constants.js';\n\nclass VaryNode extends Node {\n  constructor(node) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super();\n    this.node = node;\n    this.name = name;\n  }\n\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n\n  getNodeType(builder) {\n    // VaryNode is auto type\n    return this.node.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const node = this.node;\n    const name = this.name;\n    const nodeVary = builder.getVaryFromNode(this, type);\n\n    if (name !== null) {\n      nodeVary.name = name;\n    }\n\n    const propertyName = builder.getPropertyName(nodeVary, NodeShaderStage.Vertex); // force node run in vertex stage\n\n    builder.flowNodeFromShaderStage(NodeShaderStage.Vertex, node, type, propertyName);\n    return builder.getPropertyName(nodeVary);\n  }\n\n}\n\nexport default VaryNode;","map":{"version":3,"names":["Node","NodeShaderStage","VaryNode","constructor","node","name","getHash","builder","getNodeType","generate","type","nodeVary","getVaryFromNode","propertyName","getPropertyName","Vertex","flowNodeFromShaderStage"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/nodes/core/VaryNode.js"],"sourcesContent":["import Node from './Node.js';\nimport { NodeShaderStage } from './constants.js';\n\nclass VaryNode extends Node {\n  constructor(node, name = null) {\n    super();\n    this.node = node;\n    this.name = name;\n  }\n\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n\n  getNodeType(builder) {\n    // VaryNode is auto type\n    return this.node.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const node = this.node;\n    const name = this.name;\n    const nodeVary = builder.getVaryFromNode(this, type);\n\n    if (name !== null) {\n      nodeVary.name = name;\n    }\n\n    const propertyName = builder.getPropertyName(nodeVary, NodeShaderStage.Vertex); // force node run in vertex stage\n\n    builder.flowNodeFromShaderStage(NodeShaderStage.Vertex, node, type, propertyName);\n    return builder.getPropertyName(nodeVary);\n  }\n\n}\n\nexport default VaryNode;\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,MAAMC,QAAN,SAAuBF,IAAvB,CAA4B;EAC1BG,WAAW,CAACC,IAAD,EAAoB;IAAA,IAAbC,IAAa,uEAAN,IAAM;IAC7B;IACA,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;;EAEDC,OAAO,CAACC,OAAD,EAAU;IACf,OAAO,KAAKF,IAAL,IAAa,MAAMC,OAAN,CAAcC,OAAd,CAApB;EACD;;EAEDC,WAAW,CAACD,OAAD,EAAU;IACnB;IACA,OAAO,KAAKH,IAAL,CAAUI,WAAV,CAAsBD,OAAtB,CAAP;EACD;;EAEDE,QAAQ,CAACF,OAAD,EAAU;IAChB,MAAMG,IAAI,GAAG,KAAKF,WAAL,CAAiBD,OAAjB,CAAb;IACA,MAAMH,IAAI,GAAG,KAAKA,IAAlB;IACA,MAAMC,IAAI,GAAG,KAAKA,IAAlB;IACA,MAAMM,QAAQ,GAAGJ,OAAO,CAACK,eAAR,CAAwB,IAAxB,EAA8BF,IAA9B,CAAjB;;IAEA,IAAIL,IAAI,KAAK,IAAb,EAAmB;MACjBM,QAAQ,CAACN,IAAT,GAAgBA,IAAhB;IACD;;IAED,MAAMQ,YAAY,GAAGN,OAAO,CAACO,eAAR,CAAwBH,QAAxB,EAAkCV,eAAe,CAACc,MAAlD,CAArB,CAVgB,CAUgE;;IAEhFR,OAAO,CAACS,uBAAR,CAAgCf,eAAe,CAACc,MAAhD,EAAwDX,IAAxD,EAA8DM,IAA9D,EAAoEG,YAApE;IACA,OAAON,OAAO,CAACO,eAAR,CAAwBH,QAAxB,CAAP;EACD;;AA9ByB;;AAkC5B,eAAeT,QAAf"},"metadata":{},"sourceType":"module"}