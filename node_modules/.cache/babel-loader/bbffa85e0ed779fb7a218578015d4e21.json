{"ast":null,"code":"import Node from './Node.js';\n\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n\n      return builder.format(nodeData.propertyName, type, output);\n    }\n\n    return super.build(builder, output);\n  }\n\n}\n\nexport default TempNode;","map":{"version":3,"names":["Node","TempNode","constructor","type","build","builder","output","getVectorType","getNodeType","nodeData","getDataFromNode","context","temp","dependenciesCount","snippet","undefined","nodeVar","getVarFromNode","propertyName","getPropertyName","addFlowCode","format"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/nodes/core/TempNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n\n      return builder.format(nodeData.propertyName, type, output);\n    }\n\n    return super.build(builder, output);\n  }\n\n}\n\nexport default TempNode;\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;EAC1BE,WAAW,CAACC,IAAD,EAAO;IAChB,MAAMA,IAAN;EACD;;EAEDC,KAAK,CAACC,OAAD,EAAUC,MAAV,EAAkB;IACrB,MAAMH,IAAI,GAAGE,OAAO,CAACE,aAAR,CAAsB,KAAKC,WAAL,CAAiBH,OAAjB,EAA0BC,MAA1B,CAAtB,CAAb;IACA,MAAMG,QAAQ,GAAGJ,OAAO,CAACK,eAAR,CAAwB,IAAxB,CAAjB;;IAEA,IAAIL,OAAO,CAACM,OAAR,CAAgBC,IAAhB,KAAyB,KAAzB,IAAkCT,IAAI,KAAK,OAA3C,IAAsDG,MAAM,KAAK,MAAjE,IAA2EG,QAAQ,CAACI,iBAAT,GAA6B,CAA5G,EAA+G;MAC7G,IAAIJ,QAAQ,CAACK,OAAT,KAAqBC,SAAzB,EAAoC;QAClC,MAAMD,OAAO,GAAG,MAAMV,KAAN,CAAYC,OAAZ,EAAqBF,IAArB,CAAhB;QACA,MAAMa,OAAO,GAAGX,OAAO,CAACY,cAAR,CAAuB,IAAvB,EAA6Bd,IAA7B,CAAhB;QACA,MAAMe,YAAY,GAAGb,OAAO,CAACc,eAAR,CAAwBH,OAAxB,CAArB;QACAX,OAAO,CAACe,WAAR,CAAqB,GAAEF,YAAa,MAAKJ,OAAQ,EAAjD;QACAL,QAAQ,CAACK,OAAT,GAAmBA,OAAnB;QACAL,QAAQ,CAACS,YAAT,GAAwBA,YAAxB;MACD;;MAED,OAAOb,OAAO,CAACgB,MAAR,CAAeZ,QAAQ,CAACS,YAAxB,EAAsCf,IAAtC,EAA4CG,MAA5C,CAAP;IACD;;IAED,OAAO,MAAMF,KAAN,CAAYC,OAAZ,EAAqBC,MAArB,CAAP;EACD;;AAvByB;;AA2B5B,eAAeL,QAAf"},"metadata":{},"sourceType":"module"}