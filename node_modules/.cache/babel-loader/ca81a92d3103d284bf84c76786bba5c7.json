{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { FilmShader } from '../shaders/FilmShader.js';\n\nclass FilmPass extends Pass {\n  constructor(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (FilmShader === undefined) console.error('THREE.FilmPass relies on FilmShader');\n    const shader = FilmShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) this.uniforms.sCount.value = scanlinesCount;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['time'].value += deltaTime;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { FilmPass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","FilmShader","FilmPass","constructor","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","undefined","console","error","shader","uniforms","clone","material","vertexShader","fragmentShader","value","nIntensity","sIntensity","sCount","fsQuad","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","texture","renderToScreen","setRenderTarget","clear"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/postprocessing/FilmPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { FilmShader } from '../shaders/FilmShader.js';\n\nclass FilmPass extends Pass {\n  constructor(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (FilmShader === undefined) console.error('THREE.FilmPass relies on FilmShader');\n    const shader = FilmShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) this.uniforms.sCount.value = scanlinesCount;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['time'].value += deltaTime;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { FilmPass };\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,OAA9C;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,QAAN,SAAuBL,IAAvB,CAA4B;EAC1BM,WAAW,CAACC,cAAD,EAAiBC,kBAAjB,EAAqCC,cAArC,EAAqDC,SAArD,EAAgE;IACzE;;IAEAX,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEA,IAAIK,UAAU,KAAKO,SAAnB,EAA8BC,OAAO,CAACC,KAAR,CAAc,qCAAd;IAC9B,MAAMC,MAAM,GAAGV,UAAf;IACA,KAAKW,QAAL,GAAgBb,aAAa,CAACc,KAAd,CAAoBF,MAAM,CAACC,QAA3B,CAAhB;IACA,KAAKE,QAAL,GAAgB,IAAId,cAAJ,CAAmB;MACjCY,QAAQ,EAAE,KAAKA,QADkB;MAEjCG,YAAY,EAAEJ,MAAM,CAACI,YAFY;MAGjCC,cAAc,EAAEL,MAAM,CAACK;IAHU,CAAnB,CAAhB;IAKA,IAAIT,SAAS,KAAKC,SAAlB,EAA6B,KAAKI,QAAL,CAAcL,SAAd,CAAwBU,KAAxB,GAAgCV,SAAhC;IAC7B,IAAIH,cAAc,KAAKI,SAAvB,EAAkC,KAAKI,QAAL,CAAcM,UAAd,CAAyBD,KAAzB,GAAiCb,cAAjC;IAClC,IAAIC,kBAAkB,KAAKG,SAA3B,EAAsC,KAAKI,QAAL,CAAcO,UAAd,CAAyBF,KAAzB,GAAiCZ,kBAAjC;IACtC,IAAIC,cAAc,KAAKE,SAAvB,EAAkC,KAAKI,QAAL,CAAcQ,MAAd,CAAqBH,KAArB,GAA6BX,cAA7B;IAClC,KAAKe,MAAL,GAAc,IAAIvB,cAAJ,CAAmB,KAAKgB,QAAxB,CAAd;EACD;;EAEDQ,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2D;IAC/D,KAAKf,QAAL,CAAc,UAAd,EAA0BK,KAA1B,GAAkCQ,UAAU,CAACG,OAA7C;IACA,KAAKhB,QAAL,CAAc,MAAd,EAAsBK,KAAtB,IAA+BS,SAA/B;;IAEA,IAAI,KAAKG,cAAT,EAAyB;MACvBN,QAAQ,CAACO,eAAT,CAAyB,IAAzB;MACA,KAAKT,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB;IACD,CAHD,MAGO;MACLA,QAAQ,CAACO,eAAT,CAAyBN,WAAzB;MACA,IAAI,KAAKO,KAAT,EAAgBR,QAAQ,CAACQ,KAAT;MAChB,KAAKV,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB;IACD;EACF;;AArCyB;;AAyC5B,SAASrB,QAAT"},"metadata":{},"sourceType":"module"}