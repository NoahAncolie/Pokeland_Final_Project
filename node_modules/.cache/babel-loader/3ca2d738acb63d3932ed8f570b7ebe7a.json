{"ast":null,"code":"import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value) {\n    let uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ReflectNode();\n    let biasNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":{"version":3,"names":["TextureNode","UniformNode","ReflectNode","CubeTextureNode","constructor","value","uvNode","biasNode","getInputType","generate","builder","output","texture","isCubeTexture","Error","textureProperty","prototype","call","isReference","nodeData","getDataFromNode","snippet","undefined","uvSnippet","build","biasSnippet","getCubeTextureBias","getCubeTexture","format","isCubeTextureNode"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/accessors/CubeTextureNode.js"],"sourcesContent":["import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value, uvNode = new ReflectNode(), biasNode = null) {\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\n\nexport default CubeTextureNode;\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,eAAN,SAA8BH,WAA9B,CAA0C;EACxCI,WAAW,CAACC,KAAD,EAAqD;IAAA,IAA7CC,MAA6C,uEAApC,IAAIJ,WAAJ,EAAoC;IAAA,IAAjBK,QAAiB,uEAAN,IAAM;IAC9D,MAAMF,KAAN,EAAaC,MAAb,EAAqBC,QAArB;EACD;;EAEDC,YAAY,GAAG;IACb,OAAO,aAAP;EACD;;EAEDC,QAAQ,CAACC,OAAD,EAAUC,MAAV,EAAkB;IACxB,MAAMC,OAAO,GAAG,KAAKP,KAArB;;IAEA,IAAI,CAACO,OAAD,IAAYA,OAAO,CAACC,aAAR,KAA0B,IAA1C,EAAgD;MAC9C,MAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;IACD;;IAED,MAAMC,eAAe,GAAGd,WAAW,CAACe,SAAZ,CAAsBP,QAAtB,CAA+BQ,IAA/B,CAAoC,IAApC,EAA0CP,OAA1C,EAAmD,aAAnD,CAAxB;;IAEA,IAAIC,MAAM,KAAK,SAAf,EAA0B;MACxB,OAAOI,eAAe,GAAG,UAAzB;IACD,CAFD,MAEO,IAAIL,OAAO,CAACQ,WAAR,CAAoBP,MAApB,CAAJ,EAAiC;MACtC,OAAOI,eAAP;IACD,CAFM,MAEA;MACL,MAAMI,QAAQ,GAAGT,OAAO,CAACU,eAAR,CAAwB,IAAxB,CAAjB;MACA,IAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAvB;;MAEA,IAAIA,OAAO,KAAKC,SAAhB,EAA2B;QACzB,MAAMC,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,KAAZ,CAAkBd,OAAlB,EAA2B,MAA3B,CAAlB;QACA,MAAMH,QAAQ,GAAG,KAAKA,QAAtB;;QAEA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;UACrB,MAAMkB,WAAW,GAAGlB,QAAQ,CAACiB,KAAT,CAAed,OAAf,EAAwB,OAAxB,CAApB;UACAW,OAAO,GAAGX,OAAO,CAACgB,kBAAR,CAA2BX,eAA3B,EAA4CQ,SAA5C,EAAuDE,WAAvD,CAAV;QACD,CAHD,MAGO;UACLJ,OAAO,GAAGX,OAAO,CAACiB,cAAR,CAAuBZ,eAAvB,EAAwCQ,SAAxC,CAAV;QACD;;QAEDJ,QAAQ,CAACE,OAAT,GAAmBA,OAAnB;MACD;;MAED,OAAOX,OAAO,CAACkB,MAAR,CAAeP,OAAf,EAAwB,MAAxB,EAAgCV,MAAhC,CAAP;IACD;EACF;;AA1CuC;;AA8C1CR,eAAe,CAACa,SAAhB,CAA0Ba,iBAA1B,GAA8C,IAA9C;AAEA,eAAe1B,eAAf"},"metadata":{},"sourceType":"module"}