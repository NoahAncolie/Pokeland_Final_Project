{"ast":null,"code":"import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n  constructor(property, uniformType) {\n    let object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n\n  getNodeType() {\n    return this.uniformType;\n  }\n\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default ReferenceNode;","map":{"version":3,"names":["Node","UniformNode","NodeUpdateType","ReferenceNode","constructor","property","uniformType","object","node","updateType","Object","setNodeType","nodeType","getNodeType","update","frame","value","generate","builder","build"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/accessors/ReferenceNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n  constructor(property, uniformType, object = null) {\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n\n  getNodeType() {\n    return this.uniformType;\n  }\n\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default ReferenceNode;\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,MAAMC,aAAN,SAA4BH,IAA5B,CAAiC;EAC/BI,WAAW,CAACC,QAAD,EAAWC,WAAX,EAAuC;IAAA,IAAfC,MAAe,uEAAN,IAAM;IAChD;IACA,KAAKF,QAAL,GAAgBA,QAAhB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,IAAL,GAAY,IAAZ;IACA,KAAKC,UAAL,GAAkBP,cAAc,CAACQ,MAAjC;IACA,KAAKC,WAAL,CAAiBL,WAAjB;EACD;;EAEDK,WAAW,CAACL,WAAD,EAAc;IACvB,KAAKE,IAAL,GAAY,IAAIP,WAAJ,CAAgB,IAAhB,EAAsBK,WAAtB,CAAZ;IACA,KAAKM,QAAL,GAAgBN,WAAhB;;IAEA,IAAIA,WAAW,KAAK,OAApB,EAA6B;MAC3B,KAAKM,QAAL,GAAgB,MAAhB;IACD,CAFD,MAEO,IAAIN,WAAW,KAAK,SAApB,EAA+B;MACpC,KAAKM,QAAL,GAAgB,MAAhB;IACD;EACF;;EAEDC,WAAW,GAAG;IACZ,OAAO,KAAKP,WAAZ;EACD;;EAEDQ,MAAM,CAACC,KAAD,EAAQ;IACZ,MAAMR,MAAM,GAAG,KAAKA,MAAL,KAAgB,IAAhB,GAAuB,KAAKA,MAA5B,GAAqCQ,KAAK,CAACR,MAA1D;IACA,MAAMS,KAAK,GAAGT,MAAM,CAAC,KAAKF,QAAN,CAApB;IACA,KAAKG,IAAL,CAAUQ,KAAV,GAAkBA,KAAlB;EACD;;EAEDC,QAAQ,CAACC,OAAD,EAAU;IAChB,OAAO,KAAKV,IAAL,CAAUW,KAAV,CAAgBD,OAAhB,EAAyB,KAAKL,WAAL,CAAiBK,OAAjB,CAAzB,CAAP;EACD;;AAlC8B;;AAsCjC,eAAef,aAAf"},"metadata":{},"sourceType":"module"}