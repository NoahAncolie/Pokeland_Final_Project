{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\n\nclass STLExporter {\n  constructor() {\n    _defineProperty(this, \"binary\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"triangles\", void 0);\n\n    _defineProperty(this, \"vA\", void 0);\n\n    _defineProperty(this, \"vB\", void 0);\n\n    _defineProperty(this, \"vC\", void 0);\n\n    _defineProperty(this, \"cb\", void 0);\n\n    _defineProperty(this, \"ab\", void 0);\n\n    _defineProperty(this, \"normal\", void 0);\n\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n\n  parse(scene, options) {\n    this.binary = options.binary !== undefined ? options.binary : false; //\n\n    scene.traverse(object => {\n      if (object instanceof Mesh && object.isMesh) {\n        const geometry = object.geometry;\n\n        if (!geometry.isBufferGeometry) {\n          throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n        }\n\n        const index = geometry.index;\n        const positionAttribute = geometry.getAttribute('position');\n        this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n        this.objects.push({\n          object3d: object,\n          geometry: geometry\n        });\n      }\n    });\n\n    if (this.binary) {\n      const bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n      const arrayBuffer = new ArrayBuffer(bufferLength);\n      this.output = new DataView(arrayBuffer);\n      this.output.setUint32(this.offset, this.triangles, true);\n      this.offset += 4;\n    } else {\n      this.output = '';\n      this.output += 'solid exported\\n';\n    }\n\n    for (let i = 0, il = this.objects.length; i < il; i++) {\n      const object = this.objects[i].object3d;\n      const geometry = this.objects[i].geometry;\n      const index = geometry.index;\n      const positionAttribute = geometry.getAttribute('position');\n\n      if (object instanceof SkinnedMesh) {\n        if (index !== null) {\n          // indexed geometry\n          for (let j = 0; j < index.count; j += 3) {\n            const a = index.getX(j + 0);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        } else {\n          // non-indexed geometry\n          for (let j = 0; j < positionAttribute.count; j += 3) {\n            const a = j + 0;\n            const b = j + 1;\n            const c = j + 2;\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        }\n      }\n    }\n\n    if (!this.binary) {\n      this.output += 'endsolid exported\\n';\n    }\n\n    return this.output;\n  }\n\n  writeFace(a, b, c, positionAttribute, object) {\n    this.vA.fromBufferAttribute(positionAttribute, a);\n    this.vB.fromBufferAttribute(positionAttribute, b);\n    this.vC.fromBufferAttribute(positionAttribute, c);\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, this.vA);\n      object.boneTransform(b, this.vB);\n      object.boneTransform(c, this.vC);\n    }\n\n    this.vA.applyMatrix4(object.matrixWorld);\n    this.vB.applyMatrix4(object.matrixWorld);\n    this.vC.applyMatrix4(object.matrixWorld);\n    this.writeNormal(this.vA, this.vB, this.vC);\n    this.writeVertex(this.vA);\n    this.writeVertex(this.vB);\n    this.writeVertex(this.vC);\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setUint16(this.offset, 0, true);\n      this.offset += 2;\n    } else {\n      this.output += '\\t\\tendloop\\n';\n      this.output += '\\tendfacet\\n';\n    }\n  }\n\n  writeNormal(vA, vB, vC) {\n    this.cb.subVectors(vC, vB);\n    this.ab.subVectors(vA, vB);\n    this.cb.cross(this.ab).normalize();\n    this.normal.copy(this.cb).normalize();\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, this.normal.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\tfacet normal ${this.normal.x} ${this.normal.y} ${this.normal.z}\\n`;\n      this.output += '\\t\\touter loop\\n';\n    }\n  }\n\n  writeVertex(vertex) {\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, vertex.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n`;\n    }\n  }\n\n}\n\nexport { STLExporter };","map":{"version":3,"names":["_defineProperty","Vector3","Mesh","SkinnedMesh","STLExporter","constructor","binary","output","offset","objects","triangles","vA","vB","vC","cb","ab","normal","parse","scene","options","undefined","traverse","object","isMesh","geometry","isBufferGeometry","Error","index","positionAttribute","getAttribute","count","push","object3d","bufferLength","arrayBuffer","ArrayBuffer","DataView","setUint32","i","il","length","j","a","getX","b","c","writeFace","fromBufferAttribute","isSkinnedMesh","boneTransform","applyMatrix4","matrixWorld","writeNormal","writeVertex","setUint16","subVectors","cross","normalize","copy","setFloat32","x","y","z","vertex"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/exporters/STLExporter.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Vector3, Mesh, SkinnedMesh } from 'three';\n\n/**\n * Usage:\n *  const exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  const data = exporter.parse( mesh, { binary: true } );\n *\n */\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/f7ec78508c6797e42f87a4390735bc2c650a1bfd/types/three/examples/jsm/exporters/STLExporter.d.ts\n\nclass STLExporter {\n  constructor() {\n    _defineProperty(this, \"binary\", void 0);\n\n    _defineProperty(this, \"output\", void 0);\n\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"triangles\", void 0);\n\n    _defineProperty(this, \"vA\", void 0);\n\n    _defineProperty(this, \"vB\", void 0);\n\n    _defineProperty(this, \"vC\", void 0);\n\n    _defineProperty(this, \"cb\", void 0);\n\n    _defineProperty(this, \"ab\", void 0);\n\n    _defineProperty(this, \"normal\", void 0);\n\n    this.binary = false;\n    this.output = '';\n    this.offset = 80; // skip header\n\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n\n  parse(scene, options) {\n    this.binary = options.binary !== undefined ? options.binary : false; //\n\n    scene.traverse(object => {\n      if (object instanceof Mesh && object.isMesh) {\n        const geometry = object.geometry;\n\n        if (!geometry.isBufferGeometry) {\n          throw new Error('THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.');\n        }\n\n        const index = geometry.index;\n        const positionAttribute = geometry.getAttribute('position');\n        this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n        this.objects.push({\n          object3d: object,\n          geometry: geometry\n        });\n      }\n    });\n\n    if (this.binary) {\n      const bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n      const arrayBuffer = new ArrayBuffer(bufferLength);\n      this.output = new DataView(arrayBuffer);\n      this.output.setUint32(this.offset, this.triangles, true);\n      this.offset += 4;\n    } else {\n      this.output = '';\n      this.output += 'solid exported\\n';\n    }\n\n    for (let i = 0, il = this.objects.length; i < il; i++) {\n      const object = this.objects[i].object3d;\n      const geometry = this.objects[i].geometry;\n      const index = geometry.index;\n      const positionAttribute = geometry.getAttribute('position');\n\n      if (object instanceof SkinnedMesh) {\n        if (index !== null) {\n          // indexed geometry\n          for (let j = 0; j < index.count; j += 3) {\n            const a = index.getX(j + 0);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        } else {\n          // non-indexed geometry\n          for (let j = 0; j < positionAttribute.count; j += 3) {\n            const a = j + 0;\n            const b = j + 1;\n            const c = j + 2;\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        }\n      }\n    }\n\n    if (!this.binary) {\n      this.output += 'endsolid exported\\n';\n    }\n\n    return this.output;\n  }\n\n  writeFace(a, b, c, positionAttribute, object) {\n    this.vA.fromBufferAttribute(positionAttribute, a);\n    this.vB.fromBufferAttribute(positionAttribute, b);\n    this.vC.fromBufferAttribute(positionAttribute, c);\n\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, this.vA);\n      object.boneTransform(b, this.vB);\n      object.boneTransform(c, this.vC);\n    }\n\n    this.vA.applyMatrix4(object.matrixWorld);\n    this.vB.applyMatrix4(object.matrixWorld);\n    this.vC.applyMatrix4(object.matrixWorld);\n    this.writeNormal(this.vA, this.vB, this.vC);\n    this.writeVertex(this.vA);\n    this.writeVertex(this.vB);\n    this.writeVertex(this.vC);\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setUint16(this.offset, 0, true);\n      this.offset += 2;\n    } else {\n      this.output += '\\t\\tendloop\\n';\n      this.output += '\\tendfacet\\n';\n    }\n  }\n\n  writeNormal(vA, vB, vC) {\n    this.cb.subVectors(vC, vB);\n    this.ab.subVectors(vA, vB);\n    this.cb.cross(this.ab).normalize();\n    this.normal.copy(this.cb).normalize();\n\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, this.normal.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\tfacet normal ${this.normal.x} ${this.normal.y} ${this.normal.z}\\n`;\n      this.output += '\\t\\touter loop\\n';\n    }\n  }\n\n  writeVertex(vertex) {\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, vertex.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n`;\n    }\n  }\n\n}\n\nexport { STLExporter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}