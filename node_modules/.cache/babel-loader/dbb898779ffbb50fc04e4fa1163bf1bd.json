{"ast":null,"code":"import Node from './Node.js';\n\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n\n    return this.outputNode.build(builder, output);\n  }\n\n}\n\nBypassNode.prototype.isBypassNode = true;\nexport default BypassNode;","map":{"version":3,"names":["Node","BypassNode","constructor","returnNode","callNode","outputNode","getNodeType","builder","generate","output","snippet","build","addFlowCode","prototype","isBypassNode"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/nodes/core/BypassNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n\n    return this.outputNode.build(builder, output);\n  }\n\n}\n\nBypassNode.prototype.isBypassNode = true;\n\nexport default BypassNode;\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,UAAN,SAAyBD,IAAzB,CAA8B;EAC5BE,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;IAChC;IACA,KAAKC,UAAL,GAAkBF,UAAlB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;EACD;;EAEDE,WAAW,CAACC,OAAD,EAAU;IACnB,OAAO,KAAKF,UAAL,CAAgBC,WAAhB,CAA4BC,OAA5B,CAAP;EACD;;EAEDC,QAAQ,CAACD,OAAD,EAAUE,MAAV,EAAkB;IACxB,MAAMC,OAAO,GAAG,KAAKN,QAAL,CAAcO,KAAd,CAAoBJ,OAApB,EAA6B,MAA7B,CAAhB;;IAEA,IAAIG,OAAO,KAAK,EAAhB,EAAoB;MAClBH,OAAO,CAACK,WAAR,CAAoBF,OAApB;IACD;;IAED,OAAO,KAAKL,UAAL,CAAgBM,KAAhB,CAAsBJ,OAAtB,EAA+BE,MAA/B,CAAP;EACD;;AAnB2B;;AAuB9BR,UAAU,CAACY,SAAX,CAAqBC,YAArB,GAAoC,IAApC;AAEA,eAAeb,UAAf"},"metadata":{},"sourceType":"module"}