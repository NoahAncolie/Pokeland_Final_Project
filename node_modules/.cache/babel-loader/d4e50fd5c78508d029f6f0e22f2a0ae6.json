{"ast":null,"code":"import TempNode from '../core/TempNode.js';\n\nclass OperatorNode extends TempNode {\n  constructor(op, aNode, bNode) {\n    super();\n    this.op = op;\n\n    if ((arguments.length <= 3 ? 0 : arguments.length - 3) > 0) {\n      let finalBNode = bNode;\n\n      for (let i = 0; i < (arguments.length <= 3 ? 0 : arguments.length - 3); i++) {\n        finalBNode = new OperatorNode(op, finalBNode, i + 3 < 3 || arguments.length <= i + 3 ? undefined : arguments[i + 3]);\n      }\n\n      bNode = finalBNode;\n    }\n\n    this.aNode = aNode;\n    this.bNode = bNode;\n  }\n\n  getNodeType(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const typeA = aNode.getNodeType(builder);\n    const typeB = bNode.getNodeType(builder);\n\n    if (typeA === 'void' || typeB === 'void') {\n      return 'void';\n    } else if (op === '=' || op === '%') {\n      return typeA;\n    } else if (op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<') {\n      return 'int';\n    } else if (op === '==' || op === '&&' || op === '||' || op === '^^') {\n      return 'bool';\n    } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n      const typeLength = builder.getTypeLength(output);\n      return typeLength > 1 ? `bvec${typeLength}` : 'bool';\n    } else {\n      if (typeA === 'float' && builder.isMatrix(typeB)) {\n        return typeB;\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n        return builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n        return builder.getVectorFromMatrix(typeB);\n      } else if (builder.getTypeLength(typeB) > builder.getTypeLength(typeA)) {\n        // anytype x anytype: use the greater length vector\n        return typeB;\n      }\n\n      return typeA;\n    }\n  }\n\n  generate(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const type = this.getNodeType(builder, output);\n    let typeA = null;\n    let typeB = null;\n\n    if (type !== 'void') {\n      typeA = aNode.getNodeType(builder);\n      typeB = bNode.getNodeType(builder);\n\n      if (op === '=') {\n        typeB = typeA;\n      } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n        if (builder.isVector(typeA)) {\n          typeB = typeA;\n        } else {\n          typeA = typeB = 'float';\n        }\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n        typeB = builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n        typeA = builder.getVectorFromMatrix(typeB);\n      } else {\n        // anytype x anytype\n        typeA = typeB = type;\n      }\n    } else {\n      typeA = typeB = type;\n    }\n\n    const a = aNode.build(builder, typeA);\n    const b = bNode.build(builder, typeB);\n    const outputLength = builder.getTypeLength(output);\n\n    if (output !== 'void') {\n      if (op === '=') {\n        builder.addFlowCode(`${a} ${this.op} ${b}`);\n        return a;\n      } else if (op === '>' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('greaterThan')}( ${a}, ${b} )`, type, output);\n      } else if (op === '<=' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('lessThanEqual')}( ${a}, ${b} )`, type, output);\n      } else {\n        return builder.format(`( ${a} ${this.op} ${b} )`, type, output);\n      }\n    } else if (typeA !== 'void') {\n      return builder.format(`${a} ${this.op} ${b}`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.op = this.op;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.op = data.op;\n  }\n\n}\n\nexport default OperatorNode;","map":{"version":3,"names":["TempNode","OperatorNode","constructor","op","aNode","bNode","finalBNode","i","getNodeType","builder","output","typeA","typeB","typeLength","getTypeLength","isMatrix","isVector","getVectorFromMatrix","generate","type","a","build","b","outputLength","addFlowCode","format","getMethod","serialize","data","deserialize"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/math/OperatorNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\n\nclass OperatorNode extends TempNode {\n  constructor(op, aNode, bNode, ...params) {\n    super();\n    this.op = op;\n\n    if (params.length > 0) {\n      let finalBNode = bNode;\n\n      for (let i = 0; i < params.length; i++) {\n        finalBNode = new OperatorNode(op, finalBNode, params[i]);\n      }\n\n      bNode = finalBNode;\n    }\n\n    this.aNode = aNode;\n    this.bNode = bNode;\n  }\n\n  getNodeType(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const typeA = aNode.getNodeType(builder);\n    const typeB = bNode.getNodeType(builder);\n\n    if (typeA === 'void' || typeB === 'void') {\n      return 'void';\n    } else if (op === '=' || op === '%') {\n      return typeA;\n    } else if (op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<') {\n      return 'int';\n    } else if (op === '==' || op === '&&' || op === '||' || op === '^^') {\n      return 'bool';\n    } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n      const typeLength = builder.getTypeLength(output);\n      return typeLength > 1 ? `bvec${typeLength}` : 'bool';\n    } else {\n      if (typeA === 'float' && builder.isMatrix(typeB)) {\n        return typeB;\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n        return builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n        return builder.getVectorFromMatrix(typeB);\n      } else if (builder.getTypeLength(typeB) > builder.getTypeLength(typeA)) {\n        // anytype x anytype: use the greater length vector\n        return typeB;\n      }\n\n      return typeA;\n    }\n  }\n\n  generate(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const type = this.getNodeType(builder, output);\n    let typeA = null;\n    let typeB = null;\n\n    if (type !== 'void') {\n      typeA = aNode.getNodeType(builder);\n      typeB = bNode.getNodeType(builder);\n\n      if (op === '=') {\n        typeB = typeA;\n      } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n        if (builder.isVector(typeA)) {\n          typeB = typeA;\n        } else {\n          typeA = typeB = 'float';\n        }\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n        typeB = builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n        typeA = builder.getVectorFromMatrix(typeB);\n      } else {\n        // anytype x anytype\n        typeA = typeB = type;\n      }\n    } else {\n      typeA = typeB = type;\n    }\n\n    const a = aNode.build(builder, typeA);\n    const b = bNode.build(builder, typeB);\n    const outputLength = builder.getTypeLength(output);\n\n    if (output !== 'void') {\n      if (op === '=') {\n        builder.addFlowCode(`${a} ${this.op} ${b}`);\n        return a;\n      } else if (op === '>' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('greaterThan')}( ${a}, ${b} )`, type, output);\n      } else if (op === '<=' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('lessThanEqual')}( ${a}, ${b} )`, type, output);\n      } else {\n        return builder.format(`( ${a} ${this.op} ${b} )`, type, output);\n      }\n    } else if (typeA !== 'void') {\n      return builder.format(`${a} ${this.op} ${b}`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.op = this.op;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.op = data.op;\n  }\n\n}\n\nexport default OperatorNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}