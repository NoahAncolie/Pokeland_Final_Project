{"ast":null,"code":"import { BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass BoxLineGeometry extends BufferGeometry {\n  constructor(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    super();\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const depthHalf = depth / 2;\n    const segmentWidth = width / widthSegments;\n    const segmentHeight = height / heightSegments;\n    const segmentDepth = depth / depthSegments;\n    const vertices = [];\n    let x = -widthHalf,\n        y = -heightHalf,\n        z = -depthHalf;\n\n    for (let i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n\n    for (let i = 0; i <= heightSegments; i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n\n    for (let i = 0; i <= depthSegments; i++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n}\n\nexport { BoxLineGeometry };","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","BoxLineGeometry","constructor","width","height","depth","widthSegments","heightSegments","depthSegments","Math","floor","widthHalf","heightHalf","depthHalf","segmentWidth","segmentHeight","segmentDepth","vertices","x","y","z","i","push","setAttribute"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/geometries/BoxLineGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass BoxLineGeometry extends BufferGeometry {\n  constructor(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    super();\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const depthHalf = depth / 2;\n    const segmentWidth = width / widthSegments;\n    const segmentHeight = height / heightSegments;\n    const segmentDepth = depth / depthSegments;\n    const vertices = [];\n    let x = -widthHalf,\n        y = -heightHalf,\n        z = -depthHalf;\n\n    for (let i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n\n    for (let i = 0; i <= heightSegments; i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n\n    for (let i = 0; i <= depthSegments; i++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n}\n\nexport { BoxLineGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}