{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nclass HalftonePass extends Pass {\n  constructor(width, height, params) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (HalftoneShader === undefined) {\n      console.error('THREE.HalftonePass requires HalftoneShader');\n    }\n\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    }); // set params\n\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key];\n      }\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n\n}\n\nexport { HalftonePass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","HalftoneShader","HalftonePass","constructor","width","height","params","undefined","console","error","uniforms","clone","material","fragmentShader","vertexShader","value","key","hasOwnProperty","fsQuad","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/postprocessing/HalftonePass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\nclass HalftonePass extends Pass {\n  constructor(width, height, params) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (HalftoneShader === undefined) {\n      console.error('THREE.HalftonePass requires HalftoneShader');\n    }\n\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    }); // set params\n\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key];\n      }\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n\n}\n\nexport { HalftonePass };\n"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,QAAqC,WAArC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,OAA9C;AACA,SAASC,cAAT,QAA+B,8BAA/B;AAEA;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BL,IAA3B,CAAgC;EAC9BM,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAAwB;IACjC;;IAEAV,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEA,IAAIK,cAAc,KAAKM,SAAvB,EAAkC;MAChCC,OAAO,CAACC,KAAR,CAAc,4CAAd;IACD;;IAED,KAAKC,QAAL,GAAgBX,aAAa,CAACY,KAAd,CAAoBV,cAAc,CAACS,QAAnC,CAAhB;IACA,KAAKE,QAAL,GAAgB,IAAIZ,cAAJ,CAAmB;MACjCU,QAAQ,EAAE,KAAKA,QADkB;MAEjCG,cAAc,EAAEZ,cAAc,CAACY,cAFE;MAGjCC,YAAY,EAAEb,cAAc,CAACa;IAHI,CAAnB,CAAhB,CAdiC,CAkB7B;;IAEJ,KAAKJ,QAAL,CAAcN,KAAd,CAAoBW,KAApB,GAA4BX,KAA5B;IACA,KAAKM,QAAL,CAAcL,MAAd,CAAqBU,KAArB,GAA6BV,MAA7B;;IAEA,KAAK,MAAMW,GAAX,IAAkBV,MAAlB,EAA0B;MACxB,IAAIA,MAAM,CAACW,cAAP,CAAsBD,GAAtB,KAA8B,KAAKN,QAAL,CAAcO,cAAd,CAA6BD,GAA7B,CAAlC,EAAqE;QACnE,KAAKN,QAAL,CAAcM,GAAd,EAAmBD,KAAnB,GAA2BT,MAAM,CAACU,GAAD,CAAjC;MACD;IACF;;IAED,KAAKE,MAAL,GAAc,IAAIpB,cAAJ,CAAmB,KAAKc,QAAxB,CAAd;EACD;;EAEDO,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC;EAC9B;EADM,EAEJ;IACA,KAAKV,QAAL,CAAcF,QAAd,CAAuB,UAAvB,EAAmCK,KAAnC,GAA2CO,UAAU,CAACC,OAAtD;;IAEA,IAAI,KAAKC,cAAT,EAAyB;MACvBJ,QAAQ,CAACK,eAAT,CAAyB,IAAzB;MACA,KAAKP,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB;IACD,CAHD,MAGO;MACLA,QAAQ,CAACK,eAAT,CAAyBJ,WAAzB;MACA,IAAI,KAAKK,KAAT,EAAgBN,QAAQ,CAACM,KAAT;MAChB,KAAKR,MAAL,CAAYC,MAAZ,CAAmBC,QAAnB;IACD;EACF;;EAEDO,OAAO,CAACvB,KAAD,EAAQC,MAAR,EAAgB;IACrB,KAAKK,QAAL,CAAcN,KAAd,CAAoBW,KAApB,GAA4BX,KAA5B;IACA,KAAKM,QAAL,CAAcL,MAAd,CAAqBU,KAArB,GAA6BV,MAA7B;EACD;;AAnD6B;;AAuDhC,SAASH,YAAT"},"metadata":{},"sourceType":"module"}