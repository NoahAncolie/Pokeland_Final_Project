{"ast":null,"code":"import TempNode from './TempNode.js';\n\nclass FunctionCallNode extends TempNode {\n  constructor() {\n    let functionNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this.functionNode = functionNode;\n    this.parameters = parameters;\n  }\n\n  setParameters(parameters) {\n    this.parameters = parameters;\n    return this;\n  }\n\n  getParameters() {\n    return this.parameters;\n  }\n\n  getNodeType(builder) {\n    return this.functionNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const params = [];\n    const functionNode = this.functionNode;\n    const inputs = functionNode.getInputs(builder);\n    const parameters = this.parameters;\n\n    for (const inputNode of inputs) {\n      const node = parameters[inputNode.name];\n\n      if (node !== undefined) {\n        params.push(node.build(builder, inputNode.type));\n      } else {\n        throw new Error(`FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.`);\n      }\n    }\n\n    const functionName = functionNode.build(builder, 'property');\n    return `${functionName}( ${params.join(', ')} )`;\n  }\n\n}\n\nexport default FunctionCallNode;","map":{"version":3,"names":["TempNode","FunctionCallNode","constructor","functionNode","parameters","setParameters","getParameters","getNodeType","builder","generate","params","inputs","getInputs","inputNode","node","name","undefined","push","build","type","Error","functionName","join"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/nodes/core/FunctionCallNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass FunctionCallNode extends TempNode {\n  constructor(functionNode = null, parameters = {}) {\n    super();\n    this.functionNode = functionNode;\n    this.parameters = parameters;\n  }\n\n  setParameters(parameters) {\n    this.parameters = parameters;\n    return this;\n  }\n\n  getParameters() {\n    return this.parameters;\n  }\n\n  getNodeType(builder) {\n    return this.functionNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const params = [];\n    const functionNode = this.functionNode;\n    const inputs = functionNode.getInputs(builder);\n    const parameters = this.parameters;\n\n    for (const inputNode of inputs) {\n      const node = parameters[inputNode.name];\n\n      if (node !== undefined) {\n        params.push(node.build(builder, inputNode.type));\n      } else {\n        throw new Error(`FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.`);\n      }\n    }\n\n    const functionName = functionNode.build(builder, 'property');\n    return `${functionName}( ${params.join(', ')} )`;\n  }\n\n}\n\nexport default FunctionCallNode;\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;;AAEA,MAAMC,gBAAN,SAA+BD,QAA/B,CAAwC;EACtCE,WAAW,GAAuC;IAAA,IAAtCC,YAAsC,uEAAvB,IAAuB;IAAA,IAAjBC,UAAiB,uEAAJ,EAAI;IAChD;IACA,KAAKD,YAAL,GAAoBA,YAApB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACD;;EAEDC,aAAa,CAACD,UAAD,EAAa;IACxB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,OAAO,IAAP;EACD;;EAEDE,aAAa,GAAG;IACd,OAAO,KAAKF,UAAZ;EACD;;EAEDG,WAAW,CAACC,OAAD,EAAU;IACnB,OAAO,KAAKL,YAAL,CAAkBI,WAAlB,CAA8BC,OAA9B,CAAP;EACD;;EAEDC,QAAQ,CAACD,OAAD,EAAU;IAChB,MAAME,MAAM,GAAG,EAAf;IACA,MAAMP,YAAY,GAAG,KAAKA,YAA1B;IACA,MAAMQ,MAAM,GAAGR,YAAY,CAACS,SAAb,CAAuBJ,OAAvB,CAAf;IACA,MAAMJ,UAAU,GAAG,KAAKA,UAAxB;;IAEA,KAAK,MAAMS,SAAX,IAAwBF,MAAxB,EAAgC;MAC9B,MAAMG,IAAI,GAAGV,UAAU,CAACS,SAAS,CAACE,IAAX,CAAvB;;MAEA,IAAID,IAAI,KAAKE,SAAb,EAAwB;QACtBN,MAAM,CAACO,IAAP,CAAYH,IAAI,CAACI,KAAL,CAAWV,OAAX,EAAoBK,SAAS,CAACM,IAA9B,CAAZ;MACD,CAFD,MAEO;QACL,MAAM,IAAIC,KAAJ,CAAW,4BAA2BP,SAAS,CAACE,IAAK,8BAArD,CAAN;MACD;IACF;;IAED,MAAMM,YAAY,GAAGlB,YAAY,CAACe,KAAb,CAAmBV,OAAnB,EAA4B,UAA5B,CAArB;IACA,OAAQ,GAAEa,YAAa,KAAIX,MAAM,CAACY,IAAP,CAAY,IAAZ,CAAkB,IAA7C;EACD;;AAtCqC;;AA0CxC,eAAerB,gBAAf"},"metadata":{},"sourceType":"module"}