{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { InstancedBufferGeometry, Box3, Vector3, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isLineSegmentsGeometry\", true);\n\n    _defineProperty(this, \"type\", 'LineSegmentsGeometry');\n\n    _defineProperty(this, \"boundingBox\", null);\n\n    _defineProperty(this, \"boundingSphere\", null);\n\n    _defineProperty(this, \"box\", new Box3());\n\n    _defineProperty(this, \"vector\", new Vector3());\n\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  setPositions(array) {\n    let lineSegments;\n\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setPosition requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n\n  setColors(array) {\n    let colors;\n\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setColors requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  }\n\n  fromWireframeGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromEdgesGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n    return this;\n  }\n\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n\n    if (geometry.isBufferGeometry) {\n      this.setPositions(Array.from(geometry.attributes.position.array)); // assumes non-indexed\n    } // set colors, maybe\n\n\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start);\n      this.box.setFromBufferAttribute(end);\n      this.boundingBox.union(this.box);\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center;\n\n      if (this.boundingBox) {\n        this.boundingBox.getCenter(center);\n      }\n\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        this.vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n        this.vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n      }\n    }\n  }\n\n  toJSON() {// todo\n  }\n\n}\n\nexport { LineSegmentsGeometry };","map":{"version":3,"names":["_defineProperty","InstancedBufferGeometry","Box3","Vector3","Float32BufferAttribute","InstancedInterleavedBuffer","InterleavedBufferAttribute","WireframeGeometry","Sphere","LineSegmentsGeometry","constructor","positions","uvs","index","setIndex","setAttribute","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","console","error","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","from","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegments","isBufferGeometry","setFromBufferAttribute","box","union","center","getCenter","maxRadiusSq","i","il","count","vector","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","toJSON"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/lines/LineSegmentsGeometry.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { InstancedBufferGeometry, Box3, Vector3, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isLineSegmentsGeometry\", true);\n\n    _defineProperty(this, \"type\", 'LineSegmentsGeometry');\n\n    _defineProperty(this, \"boundingBox\", null);\n\n    _defineProperty(this, \"boundingSphere\", null);\n\n    _defineProperty(this, \"box\", new Box3());\n\n    _defineProperty(this, \"vector\", new Vector3());\n\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  setPositions(array) {\n    let lineSegments;\n\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setPosition requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n\n  setColors(array) {\n    let colors;\n\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    } else {\n      console.error('LineSegmentsGeometry.setColors requires either a Float32Array or regular array of numbers');\n      return this;\n    }\n\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  }\n\n  fromWireframeGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromEdgesGeometry(geometry) {\n    this.setPositions(Array.from(geometry.attributes.position.array));\n    return this;\n  }\n\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n    return this;\n  }\n\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n\n    if (geometry.isBufferGeometry) {\n      this.setPositions(Array.from(geometry.attributes.position.array)); // assumes non-indexed\n    } // set colors, maybe\n\n\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start);\n      this.box.setFromBufferAttribute(end);\n      this.boundingBox.union(this.box);\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center;\n\n      if (this.boundingBox) {\n        this.boundingBox.getCenter(center);\n      }\n\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        this.vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n        this.vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(this.vector));\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n      }\n    }\n  }\n\n  toJSON() {// todo\n  }\n\n}\n\nexport { LineSegmentsGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}