{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nnew THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    context,\n    children,\n    ...props\n  } = _ref;\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    children,\n    range,\n    limit = 1000,\n    frames = Infinity,\n    ...props\n  } = _ref2;\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  let updateRange = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = updateRange;\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instanceRef.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged(_ref3) {\n  let {\n    meshes,\n    children,\n    ...props\n  } = _ref3;\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(_ref4 => {\n      let {\n        geometry,\n        material\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        key: geometry.uuid,\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","ref","context","children","props","useMemo","group","useRef","subscribe","getParent","useContext","useLayoutEffect","createElement","instance","instanceKey","Instances","range","limit","frames","Infinity","useState","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","useEffect","current","needsUpdate","count","updateRange","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","Math","min","undefined","length","instanceColor","decompose","compose","premultiply","color","api","filter","item","userData","matrixAutoUpdate","args","raycast","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","key","Object","keys","isMesh","components","values","geometry","material","uuid","reduce","acc"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nnew THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  let updateRange = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = updateRange;\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instanceRef.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}