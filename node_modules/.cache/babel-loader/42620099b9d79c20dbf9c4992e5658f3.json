{"ast":null,"code":"import { Loader, FileLoader, LoadingManager, Group } from 'three';\nimport { ColladaLoader } from './ColladaLoader.js';\nimport { unzipSync } from 'fflate';\n\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n\n    const manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      const image = findFile(url);\n\n      if (image) {\n        console.log('Loading', url);\n        const blob = new Blob([image.buffer], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    }); //\n\n    const zip = unzipSync(new Uint8Array(data)); // eslint-disable-line no-undef\n\n    if (zip['doc.kml']) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip['doc.kml']), 'application/xml'); // eslint-disable-line no-undef\n\n      const model = xml.querySelector('Placemark Model Link href');\n\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent])); // eslint-disable-line no-undef\n      }\n    } else {\n      console.warn('KMZLoader: Missing doc.kml file.');\n\n      for (const path in zip) {\n        const extension = path.split('.').pop().toLowerCase();\n\n        if (extension === 'dae') {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path])); // eslint-disable-line no-undef\n        }\n      }\n    }\n\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n\n}\n\nexport { KMZLoader };","map":{"version":3,"names":["Loader","FileLoader","LoadingManager","Group","ColladaLoader","unzipSync","KMZLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","substr","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","Uint8Array","xml","DOMParser","parseFromString","fflate","strFromU8","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","scene"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/three-stdlib/loaders/KMZLoader.js"],"sourcesContent":["import { Loader, FileLoader, LoadingManager, Group } from 'three';\nimport { ColladaLoader } from './ColladaLoader.js';\nimport { unzipSync } from 'fflate';\n\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n\n    const manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      const image = findFile(url);\n\n      if (image) {\n        console.log('Loading', url);\n        const blob = new Blob([image.buffer], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    }); //\n\n    const zip = unzipSync(new Uint8Array(data)); // eslint-disable-line no-undef\n\n    if (zip['doc.kml']) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip['doc.kml']), 'application/xml'); // eslint-disable-line no-undef\n\n      const model = xml.querySelector('Placemark Model Link href');\n\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent])); // eslint-disable-line no-undef\n      }\n    } else {\n      console.warn('KMZLoader: Missing doc.kml file.');\n\n      for (const path in zip) {\n        const extension = path.split('.').pop().toLowerCase();\n\n        if (extension === 'dae') {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path])); // eslint-disable-line no-undef\n        }\n      }\n    }\n\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n\n}\n\nexport { KMZLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}