{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nconst RenderTexture = /*#__PURE__*/React.forwardRef((_ref, forwardRef) => {\n  let {\n    children,\n    width,\n    height,\n    renderPriority = 0,\n    eventPriority = 0,\n    frames = Infinity,\n    ...props\n  } = _ref;\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples: 8\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo; // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n\n\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n\n    const uv = intersection.uv;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children), vScene, {\n    events: {\n      compute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\n\nfunction Container(_ref2) {\n  let {\n    frames,\n    renderPriority,\n    children,\n    fbo\n  } = _ref2;\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };","map":{"version":3,"names":["_extends","THREE","React","useThree","createPortal","useFrame","useFBO","RenderTexture","forwardRef","children","width","height","renderPriority","eventPriority","frames","Infinity","props","size","viewport","fbo","dpr","samples","vScene","useState","Scene","compute","useCallback","event","state","previous","_fbo$texture","_previous$previousRoo","parent","texture","__r3f","Object3D","raycaster","camera","events","previousRoot","getState","intersection","intersectObject","uv","setFromCamera","pointer","set","x","y","useImperativeHandle","createElement","Fragment","Container","priority","object","count","gl","setRenderTarget","render","scene"],"sources":["/home/odin/Desktop/THP☠/Developpeur/Final_Project/pokeland/node_modules/@react-three/drei/core/RenderTexture.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst RenderTexture = /*#__PURE__*/React.forwardRef(({\n  children,\n  width,\n  height,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples: 8\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n\n    const uv = intersection.uv;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children), vScene, {\n    events: {\n      compute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\n\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}