{"ast":null,"code":"import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n\nfunction Backdrop(_ref) {\n  let {\n    children,\n    floor = 0.25,\n    segments = 20,\n    receiveShadow,\n    ...props\n  } = _ref;\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };","map":{"version":3,"names":["React","easeInExpo","x","Math","pow","Backdrop","children","floor","segments","receiveShadow","props","ref","useRef","useLayoutEffect","i","offset","position","current","attributes","y","setXYZ","needsUpdate","computeVertexNormals","createElement","rotation","PI","args"],"sources":["/home/odin/Desktop/THPâ˜ /Developpeur/Final_Project/pokeland/node_modules/@react-three/drei/core/Backdrop.js"],"sourcesContent":["import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n\nfunction Backdrop({\n  children,\n  floor = 0.25,\n  segments = 20,\n  receiveShadow,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,UAAU,GAAGC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKF,CAAL,GAAS,EAArB,CAAtC;;AAEA,SAASG,QAAT,OAMG;EAAA,IANe;IAChBC,QADgB;IAEhBC,KAAK,GAAG,IAFQ;IAGhBC,QAAQ,GAAG,EAHK;IAIhBC,aAJgB;IAKhB,GAAGC;EALa,CAMf;EACD,MAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAZ;EACAZ,KAAK,CAACa,eAAN,CAAsB,MAAM;IAC1B,IAAIC,CAAC,GAAG,CAAR;IACA,MAAMC,MAAM,GAAGP,QAAQ,GAAGA,QAAX,GAAsB,CAArC;IACA,MAAMQ,QAAQ,GAAGL,GAAG,CAACM,OAAJ,CAAYC,UAAZ,CAAuBF,QAAxC;;IAEA,KAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,QAAQ,GAAG,CAA/B,EAAkCN,CAAC,EAAnC,EAAuC;MACrC,KAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAAQ,GAAG,CAA/B,EAAkCW,CAAC,EAAnC,EAAuC;QACrCH,QAAQ,CAACI,MAAT,CAAgBN,CAAC,EAAjB,EAAqBZ,CAAC,GAAGM,QAAJ,GAAeO,MAAf,IAAyBb,CAAC,KAAK,CAAN,GAAU,CAACK,KAAX,GAAmB,CAA5C,CAArB,EAAqEY,CAAC,GAAGX,QAAJ,GAAeO,MAApF,EAA4Fd,UAAU,CAACC,CAAC,GAAGM,QAAL,CAAtG;MACD;IACF;;IAEDQ,QAAQ,CAACK,WAAT,GAAuB,IAAvB;IACAV,GAAG,CAACM,OAAJ,CAAYK,oBAAZ;EACD,CAbD,EAaG,CAACd,QAAD,EAAWD,KAAX,CAbH;EAcA,OAAO,aAAaP,KAAK,CAACuB,aAAN,CAAoB,OAApB,EAA6Bb,KAA7B,EAAoC,aAAaV,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;IAC/Fd,aAAa,EAAEA,aADgF;IAE/Fe,QAAQ,EAAE,CAAC,CAACrB,IAAI,CAACsB,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkBtB,IAAI,CAACsB,EAAL,GAAU,CAA5B;EAFqF,CAA5B,EAGlE,aAAazB,KAAK,CAACuB,aAAN,CAAoB,eAApB,EAAqC;IACnDZ,GAAG,EAAEA,GAD8C;IAEnDe,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOlB,QAAP,EAAiBA,QAAjB;EAF6C,CAArC,CAHqD,EAMjEF,QANiE,CAAjD,CAApB;AAOD;;AAED,SAASD,QAAT"},"metadata":{},"sourceType":"module"}