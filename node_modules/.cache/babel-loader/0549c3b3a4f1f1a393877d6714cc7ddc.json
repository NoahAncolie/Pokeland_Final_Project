{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from 'three';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nclass GlitchPass extends Pass {\n  constructor() {\n    let dt_size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 64;\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"goWild\", void 0);\n\n    _defineProperty(this, \"curF\", void 0);\n\n    _defineProperty(this, \"randX\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n    const shader = DigitalGlitch;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    if (renderer.capabilities.isWebGL2 === false) this.uniforms['tDisp'].value.format = LuminanceFormat;\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  }\n\n  generateHeightmap(dt_size) {\n    const data_arr = new Float32Array(dt_size * dt_size);\n    const length = dt_size * dt_size;\n\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1);\n      data_arr[i] = val;\n    }\n\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n\n}\n\nexport { GlitchPass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","LuminanceFormat","MathUtils","DataTexture","RedFormat","FloatType","DigitalGlitch","GlitchPass","constructor","dt_size","undefined","console","error","shader","uniforms","clone","value","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","goWild","curF","generateTrigger","render","renderer","writeBuffer","readBuffer","capabilities","isWebGL2","format","texture","Math","random","randX","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","length","i","val","needsUpdate"],"sources":["/Users/paolucciloic/Desktop/pokemon-projet-final/Pokeland_Final_Project/node_modules/three-stdlib/postprocessing/GlitchPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from 'three';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nclass GlitchPass extends Pass {\n  constructor(dt_size = 64) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"goWild\", void 0);\n\n    _defineProperty(this, \"curF\", void 0);\n\n    _defineProperty(this, \"randX\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n    const shader = DigitalGlitch;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    if (renderer.capabilities.isWebGL2 === false) this.uniforms['tDisp'].value.format = LuminanceFormat;\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  }\n\n  generateHeightmap(dt_size) {\n    const data_arr = new Float32Array(dt_size * dt_size);\n    const length = dt_size * dt_size;\n\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1);\n      data_arr[i] = val;\n    }\n\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n\n}\n\nexport { GlitchPass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}